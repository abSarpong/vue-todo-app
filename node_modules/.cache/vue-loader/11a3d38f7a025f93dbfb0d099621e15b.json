{"remainingRequest":"/mnt/c/Users/Michael/Documents/Development/vue-todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/Michael/Documents/Development/vue-todo-app/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/mnt/c/Users/Michael/Documents/Development/vue-todo-app/src/App.vue","mtime":1598442351817},{"path":"/mnt/c/Users/Michael/Documents/Development/vue-todo-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/Michael/Documents/Development/vue-todo-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/c/Users/Michael/Documents/Development/vue-todo-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/mnt/c/Users/Michael/Documents/Development/vue-todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/Michael/Documents/Development/vue-todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhcHAgewogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7Cn0KLndyYXBwZXIgewogIHdpZHRoOiA1MDBweDsKICBtYXJnaW46IDAgYXV0bzsKICBwYWRkaW5nLXRvcDogOTZweDsKfQouZW1wdHktc3RhdGUgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHBhZGRpbmctdG9wOiAxMDBweDsKfQoKLyogbWVkaWEgcXVlcmllcyAqLwpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgLndyYXBwZXIgewogICAgd2lkdGg6IDM4MHB4OwogIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"wrapper\">\n      <add-to-do @add-new-todo=\"addTodo\"></add-to-do>\n      <div v-if=\"todoCount\">\n        <div v-for=\"{ id, title, completed } in todos\" :key=\"id\">\n          <todo-item\n            :id=\"id\"\n            :title=\"title\"\n            :completed=\"completed\"\n            @delete-todo=\"deleteTodo(id)\"\n            @mark-complete=\"markComplete(id)\"\n            @toggle-todo-forms=\"toggleEditForm(id)\"\n            @add-edited-todo=\"editTodo(id, title)\"\n          />\n        </div>\n      </div>\n      <div v-else class=\"empty-state\">\n        <div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"#d4d4d4\"\n            style=\"width: 96px\"\n          >\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n            />\n          </svg>\n          <h2 style=\"color: #616161; font-weight: 500\">No Todos Available Yet</h2>\n          <span style=\"color: #7a7a7a; font-size: 14px\">Todos you input will show up here.</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AddToDo from \"./components/AddToDo.vue\";\nimport TodoItem from \"./components/TodoItem.vue\";\nimport uniqueId from \"lodash.uniqueid\";\n\nexport default {\n  name: \"App\",\n  components: {\n    AddToDo,\n    TodoItem,\n  },\n  data() {\n    return {\n      todos: [],\n      isEditing: false,\n    };\n  },\n  methods: {\n    addTodo(newTodo) {\n      const todoData = {\n        id: uniqueId(),\n        title: newTodo,\n        completed: false,\n      };\n      this.todos = [...this.todos, todoData];\n      // this.todos.push({\n      //   id: this.todos.length + 1,\n      //   title: newTodo,\n      //   completed: false,\n      // });\n    },\n    markComplete(id) {\n      const todoItemId = this.todos.find((item) => item.id === id);\n      todoItemId.completed = !todoItemId.completed;\n    },\n    deleteTodo(id) {\n      const todoIndex = this.todos.findIndex((item) => item.id === id);\n      this.todos.splice(todoIndex, 1);\n    },\n    editTodo(id, title) {\n      const todoToEdit = this.todos.find((item) => item.id === id);\n      todoToEdit.todo = title;\n    },\n  },\n  computed: {\n    todoCount() {\n      return this.todos.length;\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n}\n.wrapper {\n  width: 500px;\n  margin: 0 auto;\n  padding-top: 96px;\n}\n.empty-state {\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  padding-top: 100px;\n}\n\n/* media queries */\n@media only screen and (max-width: 600px) {\n  .wrapper {\n    width: 380px;\n  }\n}\n</style>\n"]}]}