{"remainingRequest":"/mnt/c/users/michael/documents/development/vue-todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/users/michael/documents/development/vue-todo-app/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/mnt/c/users/michael/documents/development/vue-todo-app/src/App.vue","mtime":1597671690868},{"path":"/mnt/c/users/michael/documents/development/vue-todo-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/michael/documents/development/vue-todo-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/c/users/michael/documents/development/vue-todo-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/mnt/c/users/michael/documents/development/vue-todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/michael/documents/development/vue-todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhcHAgewogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7Cn0KLndyYXBwZXIgewogIHdpZHRoOiA1MDBweDsKICBtYXJnaW46IDAgYXV0bzsKICBwYWRkaW5nLXRvcDogOTZweDsKfQouZW1wdHktc3RhdGUgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHBhZGRpbmctdG9wOiAxMDBweDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"wrapper\">\n      <div v-if=\"!isEditing\">\n        <add-to-do @add-new-todo=\"addTodo\"></add-to-do>\n        <div v-if=\"todoCount\">\n          <div v-for=\"{ id, todo, completed } in todos\" :key=\"id\">\n            <todo-item\n              :id=\"id\"\n              :todo=\"todo\"\n              :completed=\"completed\"\n              @delete-todo=\"deleteTodo(id)\"\n              @mark-complete=\"markComplete(id)\"\n              @toggle-todo-forms=\"toggleEditForm(id)\"\n            />\n          </div>\n        </div>\n        <div v-else class=\"empty-state\">\n          <div>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"#d4d4d4\"\n              style=\"width: 96px\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n              />\n            </svg>\n            <h2 style=\"color: #616161; font-weight: 500\">\n              No Todos Available Yet\n            </h2>\n            <span style=\"color: #7a7a7a; font-size: 14px\"\n              >Todos you input will show up here.</span\n            >\n          </div>\n        </div>\n      </div>\n      <edit-to-do\n        @edit-todo=\"editTodo\"\n        @cancel-edit=\"editCancelled\"\n        :isEditing=\"isEditing\"\n        v-else\n      ></edit-to-do>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AddToDo from \"./components/AddToDo.vue\";\nimport TodoItem from \"./components/TodoItem.vue\";\nimport EditToDo from \"./components/EditToDo.vue\";\nimport axios from \"axios\";\n\n// import uniqueId from \"lodash.uniqueid\";\n\nexport default {\n  name: \"App\",\n  components: {\n    AddToDo,\n    TodoItem,\n    EditToDo,\n  },\n  data() {\n    return {\n      todos: [],\n      isEditing: false,\n    };\n  },\n  mounted() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=4\")\n      .then((res) => (this.todos = res.data))\n      .catch((error) => console.log(error));\n  },\n  methods: {\n    addTodo(todo) {\n      axios\n        .post(\"https://jsonplaceholder.typicode.com/todos\", {\n          todo: todo,\n          completed: false,\n        })\n        .then((res) => this.todos.push(res.data));\n      // this.todos.push({\n      //   id: uniqueId(),\n      //   todo: todo,\n      //   completed: false,\n      // });\n    },\n    markComplete(id) {\n      const todoItemId = this.todos.find((item) => item.id === id);\n      todoItemId.completed = !todoItemId.completed;\n    },\n    deleteTodo(id) {\n      // this.todos = this.todos.filter((todo) => todo.id != id);\n      const todoIndex = this.todos.findIndex((item) => item.id === id);\n      this.todos.splice(todoIndex, 1);\n    },\n    editTodo(id, newTodo) {\n      console.log(id, newTodo, \"kk\");\n      const todoToEdit = this.todos.find((item) => item.id === id);\n      todoToEdit.todo = newTodo + \" yeap\";\n    },\n    toggleEditForm(id) {\n      this.isEditing = true;\n      console.log(id);\n    },\n    editCancelled() {\n      this.isEditing = false;\n    },\n  },\n  computed: {\n    todoCount() {\n      return this.todos.length;\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n}\n.wrapper {\n  width: 500px;\n  margin: 0 auto;\n  padding-top: 96px;\n}\n.empty-state {\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  padding-top: 100px;\n}\n</style>\n"]}]}